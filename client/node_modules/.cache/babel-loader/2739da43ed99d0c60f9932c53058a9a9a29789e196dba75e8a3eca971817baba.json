{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USEZAL\\\\Proyectos React JS\\\\NB-Dashboard\\\\client\\\\src\\\\components\\\\Table.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table(props) {\n  const data = props.data;\n  const handleEdit = index => {\n    // Implement your edit functionality here\n    console.log(`Editing row ${index}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"profile_table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [props.columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: column\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [props.columns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row[column]\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => handleEdit(index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["Table","props","data","handleEdit","index","console","log","_jsxDEV","className","children","columns","map","column","fileName","_jsxFileName","lineNumber","columnNumber","row","columnIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USEZAL/Proyectos React JS/NB-Dashboard/client/src/components/Table.jsx"],"sourcesContent":["\r\n\r\nfunction Table(props) {\r\n  const data=props.data;\r\n\r\n  const handleEdit = (index) => {\r\n    // Implement your edit functionality here\r\n    console.log(`Editing row ${index}`);\r\n  };\r\n\r\n  return (\r\n    <table className='profile_table'>\r\n      <thead>\r\n        <tr>\r\n          {props.columns.map((column, index) => (\r\n            <th key={index} >{column}</th>\r\n          ))}\r\n          <th>Update</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, index) => (\r\n          <tr key={index}>\r\n            {props.columns.map((column, columnIndex) => (\r\n              <td key={columnIndex}>{row[column]}</td>\r\n            ))}\r\n            <td><button className=\"btn\" onClick={() => handleEdit(index)}>Edit</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":";;AAEA,SAASA,KAAKA,CAACC,KAAK,EAAE;EACpB,MAAMC,IAAI,GAACD,KAAK,CAACC,IAAI;EAErB,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC5B;IACAC,OAAO,CAACC,GAAG,CAAE,eAAcF,KAAM,EAAC,CAAC;EACrC,CAAC;EAED,oBACEG,OAAA;IAAOC,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC9BF,OAAA;MAAAE,QAAA,eACEF,OAAA;QAAAE,QAAA,GACGR,KAAK,CAACS,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAER,KAAK,kBAC/BG,OAAA;UAAAE,QAAA,EAAkBG;QAAM,GAAfR,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAC9B,CAAC,eACFT,OAAA;UAAAE,QAAA,EAAI;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRT,OAAA;MAAAE,QAAA,EACGP,IAAI,CAACS,GAAG,CAAC,CAACM,GAAG,EAAEb,KAAK,kBACnBG,OAAA;QAAAE,QAAA,GACGR,KAAK,CAACS,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEM,WAAW,kBACrCX,OAAA;UAAAE,QAAA,EAAuBQ,GAAG,CAACL,MAAM;QAAC,GAAzBM,WAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CACxC,CAAC,eACFT,OAAA;UAAAE,QAAA,eAAIF,OAAA;YAAQC,SAAS,EAAC,KAAK;YAACW,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACC,KAAK,CAAE;YAAAK,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJzEZ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACI,EAAA,GA9BQpB,KAAK;AAgCd,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}